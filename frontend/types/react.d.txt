import type { ModelViewerElement } from '@google/model-viewer';

declare global {
    namespace JSX {
        interface IntrinsicElements {
        'model-viewer': ModelViewer;
        }
    }
    }

    export interface ModelViewer extends Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>, 'ref'> {
    src?: string;
    alt?: string;
    poster?: string;
    loading?: 'eager' | 'lazy' | 'auto';
    reveal?: 'auto' | 'interaction' | 'manual';
    'with-credentials'?: boolean;
    ar?: boolean;
    'ar-modes'?: 'webxr' | 'scene-viewer' | 'quick-look' | 'webxr scene-viewer' | 'webxr quick-look' | 'scene-viewer quick-look' | 'webxr scene-viewer quick-look';
    'ar-scale'?: 'auto' | 'fixed';
    'ar-placement'?: 'floor' | 'wall';
    'ios-src'?: string;
    'xr-environment'?: boolean;
    'camera-controls'?: boolean;
    'disable-pan'?: boolean;
    'disable-tap'?: boolean;
    'touch-action'?: 'pan-x' | 'pan-y' | 'none';
    'disable-zoom'?: boolean;
    'orbit-speed'?: number;
    'auto-rotate'?: boolean;
    'auto-rotate-delay'?: number;
    'rotation-per-second'?: string;
    'interaction-prompt'?: 'auto' | 'none';
    'interaction-prompt-style'?: 'basic' | 'wiggle';
    'interaction-prompt-threshold'?: number;
    'camera-orbit'?: string;
    'camera-target'?: string;
    'field-of-view'?: string;
    'max-camera-orbit'?: string;
    'min-camera-orbit'?: string;
    'max-field-of-view'?: string;
    'min-field-of-view'?: string;
    'interpolation-decay'?: number;
    'skybox-image'?: string;
    'skybox-height'?: string;
    'environment-image'?: 'neutral' | 'legacy' | string;
    exposure?: number;
    'tone-mapping'?: 'aces' | 'agx' | 'commerce';
    'shadow-intensity'?: number;
    'shadow-softness'?: number;
    'animation-name'?: string;
    'animation-crossfade-duration'?: number;
    autoplay?: boolean;
    'variant-name'?: string;
    orientation?: string;
    scale?: string;
    minimumRenderScale?: number;
    modelCacheSize?: number;
    powerPreference?: 'default' | 'high-performance' | 'low-power';
    id?: string;
    style?: React.CSSProperties;
    ref?: React.RefObject<ModelViewerElement | undefined>;
}

// Credit: @am0wa @subhankar-trisetra via https://github.com/google/model-viewer/discussions/3358